% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MCMS.R
\name{MCMS}
\alias{MCMS}
\title{The main function here.
Receives the data and the variance model, prepares all the elements and then performs the simulation}
\usage{
MCMS(
  Peptides,
  var.model,
  n = calcIterations(Peptides),
  n.out = 7000,
  burn.in = 0.3,
  max.repeats = 20,
  c.prior.sd = sqrt(2),
  o.prior.shape1 = 0.5,
  o.prior.shape2 = 0.5,
  prior_move_proportion = 0.02,
  c_sd = 0.05,
  o_sd = 0.05,
  o_k_scale = 1/100,
  o_restrict = 0.001,
  seed = round(runif(10, -.Machine$integer.max, .Machine$integer.max)),
  verbose = FALSE,
  cooling = TRUE
)
}
\arguments{
\item{Peptides}{the Peptides model data}

\item{var.model}{the variance model}

\item{n}{number of iterations}

\item{n.out}{number of iterations to record. Should be a divisor of (1 - burn.in) * n for best results.}

\item{burn.in}{the fraction of the time \code{n} to use as burn-in (a proportion, not integer time)}

\item{max.repeats}{the maximum number of repeats of 1E9 iterations to run}

\item{c.prior.sd, o.prior.shape1, o.prior.shape2}{parameters for the prior}

\item{prior_move_proportion}{the proportion of moves that are sampled from the prior}

\item{c_sd, o_sd}{standard deviations for the moves on o and c}

\item{o_k_scale}{scaling factor for the moves on o when they are close to 0 or 1}

\item{o_restrict}{reject any move that is closer than o_restrict to 0 or 1}

\item{seed}{a seed from the sampling, taken from \code{\link{runif}} by default.}

\item{verbose}{if TRUE, will print internal details of the Monte Carlo object (elements and pointers)}

\item{cooling}{whether to perform cooling during the MonteCarlo. If \code{TRUE}, the simulation will start with}
}
\description{
The main function here.
Receives the data and the variance model, prepares all the elements and then performs the simulation
}
\examples{
data(ENSTest)
data(var.model)
ENSTestProtein <- Protein(ENSTest)
ENSTestModel <- Peptides(ENSTestProtein)
MCMS(ENSTestModel, var.model,
	prior_move_proportion = .02, c_sd = 0.05, o_sd = 0.05, o_k_scale = 1/100)
}
